{"name": "test[case4]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 500", "trace": "self = <test_22_my_order_list.TestMyOrderList object at 0x059314B0>\ncase = {'data': '{\"dataType\":false,\"page\":1}', 'expected_result': '{\"status\":500,\"message\":\"success\",\"data\":{}}', 'json_type': False, 'jsonpath': None, ...}\n\n    @pytest.mark.parametrize('case',data)\n    def test(self,case):\n        # 1. 替换数据---#变量#\n        case = replace_case_by_regular(case)\n        # 2. 发送接口请求\n        res = send_request(case['url'], case['method'], case['data'], case['json_type'], case['login_status'])\n        # 3. 断言接口是否通\n        assert res.status_code == 200\n        # 4. 根据预期结果进行断言--根据用户自己来的\n>       assert res.json()['status'] == eval(case['expected_result'])['status']\nE       assert 200 == 500\n\nTestCase\\test_07_order\\test_22_my_order_list.py:34: AssertionError"}, "attachments": [{"name": "log", "source": "a251e066-3ab7-437e-bd93-d68ca1a9dec3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'title': 'dataType字段类型错误校验', 'url': 'index.php?s=/api/order/list', 'method': 'get', 'data': '{\"dataType\":false,\"page\":1}', 'json_type': False, 'expected_result': '{\"status\":500,\"message\":\"success\",\"data\":{}}', 'jsonpath': None, 'login_status': None}"}], "start": 1707888631113, "stop": 1707888631160, "uuid": "32ff089a-1809-4086-b88f-49792b6fe228", "historyId": "f45e552480741b32354a0c81cf1747d3", "testCaseId": "768d59998a4fd2adc92834e87efe36e5", "fullName": "TestCase.test_07_order.test_22_my_order_list.TestMyOrderList#test", "labels": [{"name": "parentSuite", "value": "TestCase.test_07_order"}, {"name": "suite", "value": "test_22_my_order_list"}, {"name": "subSuite", "value": "TestMyOrderList"}, {"name": "host", "value": "DESKTOP-IO3SE61"}, {"name": "thread", "value": "10304-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_07_order.test_22_my_order_list"}]}